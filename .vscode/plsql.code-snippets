{
    /*
        // Place your snippets for PLSQL here. Each snippet is defined under a snippet name and has a prefix, body and
        // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
        // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
        // same ids are connected.
        // Example:
        "Print to console": {
            "prefix": "log",
            "body": [
                "console.log('$1');",
                "$2"
            ],
            "description": "Log output to console"
        }
    */

	"Package specification": {
		"scope": "plsql",
		"prefix": "@pks",
		"body": [
			"create or replace package $1:package_name authid current_user is\n",
			"   /*!",
            "   * $2:description",
			"   */\n",
            "   c_version            constant varchar2(8 char) := '1.0.0';\n",
            "   procedure $3:procedure_name(",
            "      p_param1_todo    in varchar2) is\n",
            "end $1:package_name"
            "/"
		],
		"description": "Create Oracle package specification."
	},
	"Package body": {
		"scope": "plsql",
		"prefix": "@pkb",
		"body": [
			"create or replace package body $1:package_name as\n",
			"   c_scope_prefix constant varchar2(31) := lower($$plsql_unit) || '.';\n",
            "   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ PRIVATE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
            "   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
            "   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ PUBLIC ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
            "   procedure $2:procedure_name(",
            "      p_param1_todo    in varchar2) is\n",
            "      l_params            logger.tab_param;",
            "      l_scope             logger_logs.scope%type := gc_scope_prefix || '$2:procedure_name';\n",
            "   begin\n",
            "      logger.append_param(l_params, 'p_param1_todo', p_param1_todo);",
            "      logger.log('START', l_scope, null, l_params);\n",
            "      logger.log('END', l_scope, null, l_params);\n",
            "   exception",
            "      when others then",
            "         logger.log_error('Unhandled Exception', l_scope, null, l_params);",
            "         raise;\n",
            "   end $2:procedure_name;",
            "   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n",
            "end $1:package_name;"
            "/"
		],
		"description": "Create Oracle package body."
	},
	"Table": {
		"scope": "plsql",
		"prefix": "@tbl",
		"body": [
            "-- drop objects",
            "declare",
            "   l_cnt    pls_integer;",
            "begin",
            "   select count(*) into l_cnt from user_tables where table_name = upper('$1:table_name');",
            "",
            "   if (l_cnt > 0) then",
            "      execute immediate 'drop table $1:table_name cascade constraints purge';",
            "   end if;",
            "end;",
            "/\n",
            "-- create tables",
            "create table $1:table_name (",
            "   id                number generated by default on null as identity,",
            "   created           timestamp with time zone default current_timestamp not null,",
            "   created_by        varchar2(255 char)  not null default coalesce(sys_context('APEX$SESSION', 'APP_USER'), ",
            "                                                                   regexp_substr(sys_context('userenv','client_identifier'),'^[^:]*'),",
            "                                                                   sys_context('userenv','session_user'))",
            ")",
            ";\n",
            "alter table $1:table_name add constraint $1:table_name_id__pk primary key (id);\n",
            "comment on table $1:table_name is '.';",
            "comment on column $1:table_name.id is 'Surrogate key.';",
            "comment on column $1:table_name.created is 'Date when record was inserted.';",
            "comment on column $1:table_name.created_by is 'Who created the record.';",
		],
		"description": "Create new table."
	}
}
